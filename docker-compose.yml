version: "3.8"

services:
  api1:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    hostname: api1
    environment:
      - PORT=8080
      - DB_HOST=mongo
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "200MB"

  api2:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    hostname: api2
    environment:
      - PORT=8081
      - DB_HOST=mongo
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "200MB"

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: "20MB"

  mongo:
    image: docker.io/bitnami/mongodb:6.0.13@sha256:2a8f4610f02c2f39c7608981d2895253206897c49dcd957c78b0a26956361e50
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo:/docker-entrypoint-initdb.d
    environment:
      - MONGODB_ROOT_PASSWORD=123456
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=123456
      - MONGODB_DATABASE=rinha
    healthcheck:
      test: [ "CMD", "mongosh", "--eval=\"db.adminCommand('ping')\"" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: "130MB"

volumes:
  mongodb_data: